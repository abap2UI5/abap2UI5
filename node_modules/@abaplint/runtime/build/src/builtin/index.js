"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$_vertical_tab = exports.$_newline = exports.$_horizontal_tab = exports.$_formfeed = exports.$_cr_lf = exports.$_backspace = exports.space = exports.abap_undefined = exports.abap_false = exports.abap_true = void 0;
const types_1 = require("../types");
__exportStar(require("./abs"), exports);
__exportStar(require("./boolc"), exports);
__exportStar(require("./ceil"), exports);
__exportStar(require("./concat_lines_of"), exports);
__exportStar(require("./condense"), exports);
__exportStar(require("./contains"), exports);
__exportStar(require("./cos"), exports);
__exportStar(require("./count_any_of"), exports);
__exportStar(require("./count"), exports);
__exportStar(require("./escape"), exports);
__exportStar(require("./find"), exports);
__exportStar(require("./floor"), exports);
__exportStar(require("./frac"), exports);
__exportStar(require("./from_mixed"), exports);
__exportStar(require("./insert"), exports);
__exportStar(require("./ipow"), exports);
__exportStar(require("./lines"), exports);
__exportStar(require("./match"), exports);
__exportStar(require("./matches"), exports);
__exportStar(require("./nmax"), exports);
__exportStar(require("./nmin"), exports);
__exportStar(require("./numofchar"), exports);
__exportStar(require("./repeat"), exports);
__exportStar(require("./replace"), exports);
__exportStar(require("./reverse"), exports);
__exportStar(require("./round"), exports);
__exportStar(require("./segment"), exports);
__exportStar(require("./shift_left"), exports);
__exportStar(require("./shift_right"), exports);
__exportStar(require("./sign"), exports);
__exportStar(require("./sin"), exports);
__exportStar(require("./sqrt"), exports);
__exportStar(require("./strlen"), exports);
__exportStar(require("./substring_after"), exports);
__exportStar(require("./substring_before"), exports);
__exportStar(require("./substring"), exports);
__exportStar(require("./sy"), exports);
__exportStar(require("./tan"), exports);
__exportStar(require("./to_lower"), exports);
__exportStar(require("./to_mixed"), exports);
__exportStar(require("./to_upper"), exports);
__exportStar(require("./translate"), exports);
__exportStar(require("./trunc"), exports);
__exportStar(require("./xstrlen"), exports);
exports.abap_true = new types_1.Character(1, { qualifiedName: "ABAP_BOOL", ddicName: "ABAP_BOOL" }).set("X").setConstant();
exports.abap_false = new types_1.Character(1, { qualifiedName: "ABAP_BOOL", ddicName: "ABAP_BOOL" }).set("").setConstant();
exports.abap_undefined = new types_1.Character(1, { qualifiedName: "ABAP_BOOL", ddicName: "ABAP_BOOL" }).set("-").setConstant();
exports.space = new types_1.Character(1, { qualifiedName: "ABAP_BOOL", ddicName: "ABAP_BOOL" }).set(" ").setConstant();
exports.$_backspace = new types_1.Character(1).set("\b").setConstant();
exports.$_cr_lf = new types_1.Character(2).set("\r\n").setConstant();
exports.$_formfeed = new types_1.Character(1).set("\f").setConstant();
exports.$_horizontal_tab = new types_1.Character(1).set("\t").setConstant();
exports.$_newline = new types_1.Character(1).set("\n").setConstant();
exports.$_vertical_tab = new types_1.Character(1).set("\v").setConstant();
/*
export const $_maxchar = new Character(1).set(Buffer.from("FDFF", "hex").toString()).setConstant();
export const $_minchar = new Character(1).set(Buffer.from("0000", "hex").toString()).setConstant();
*/ 
//# sourceMappingURL=index.js.map