import { DataReference, FieldSymbol, HashedTable, Integer8, Structure, Table } from "../types";
import { ICharacter } from "../types/_character";
import { INumeric } from "../types/_numeric";
export interface IReadTableOptions {
    index?: INumeric | Integer8 | FieldSymbol | number;
    into?: INumeric | ICharacter | Structure | Table | DataReference;
    from?: INumeric | ICharacter | Structure | Table | DataReference;
    referenceInto?: DataReference;
    assigning?: FieldSymbol;
    binarySearch?: boolean;
    withTableKey?: boolean;
    keyName?: string;
    usesTableLine?: boolean;
    withKey?: (i: any) => boolean;
    withKeyValue?: {
        key: (i: any) => any;
        value: any;
    }[];
    withKeySimple?: {
        [key: string]: any;
    };
}
export type ReadTableReturn = {
    subrc: number;
    foundIndex: number;
};
export declare function readTable(table: Table | HashedTable | FieldSymbol, options?: IReadTableOptions): ReadTableReturn;
