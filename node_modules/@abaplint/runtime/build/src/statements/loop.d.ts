import { FieldSymbol, HashedTable, Integer, Table } from "../types";
import { ICharacter } from "../types/_character";
import { INumeric } from "../types/_numeric";
type topType = {
    [name: string]: INumeric | ICharacter;
};
export interface ILoopOptions {
    where?: (i: any) => Promise<boolean>;
    usingKey?: string;
    from?: Integer;
    to?: Integer;
    topEquals?: topType;
}
export declare function loop(table: Table | HashedTable | FieldSymbol | undefined, options?: ILoopOptions): AsyncGenerator<any, void, unknown>;
export {};
