import { FieldSymbol } from "./field_symbol";
import { Hex } from "./hex";
import { Structure } from "./structure";
import { AbstractTypeData } from "./_abstract_type_data";
import { ICharacter } from "./_character";
import { INumeric } from "./_numeric";
import { Integer } from "./integer";
export declare class Character implements ICharacter {
    private value;
    private constant;
    private readonly length;
    private readonly extra;
    constructor(length?: number, extra?: AbstractTypeData);
    setConstant(): this;
    set(value: ICharacter | string | Structure | FieldSymbol | Integer): this;
    getQualifiedName(): string | undefined;
    getConversionExit(): string | undefined;
    getDDICName(): string | undefined;
    getLength(): number;
    clear(): void;
    get(): string;
    getTrimEnd(): string;
    getOffset(input: {
        offset?: number | INumeric | Hex;
        length?: number | INumeric | Hex;
    }): Character;
}
