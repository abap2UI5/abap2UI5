import { Float } from "./float";
import { Integer } from "./integer";
import { XString } from "./xstring";
import { ICharacter } from "./_character";
import { INumeric } from "./_numeric";
import { Integer8 } from "./integer8";
import { Hex } from "./hex";
export declare class HexUInt8 implements ICharacter {
    private value;
    private readonly length;
    private readonly qualifiedName;
    constructor(input?: {
        length?: number;
        qualifiedName?: string;
    });
    getQualifiedName(): string | undefined;
    setOffset(offset: number, value: number): void;
    getOffsetRaw(offset: number): number;
    set(value: ICharacter | INumeric | string | number | Integer | Integer8 | Float | Hex | XString): HexUInt8;
    getLength(): number;
    clear(): void;
    get(): string;
    getOffset(input: {
        offset?: number | INumeric | Hex | Integer8;
        length?: number | INumeric | Hex | Integer8;
    }): XString;
}
