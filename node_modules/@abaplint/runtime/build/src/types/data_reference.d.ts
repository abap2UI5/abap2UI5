import { INumeric } from "./_numeric";
import { ICharacter } from "./_character";
import { ABAPObject } from "./abap_object";
import { Table } from "./table";
import { String } from "./string";
import { Structure } from "./structure";
import { Float } from "./float";
import { Hex } from "./hex";
import { Integer8 } from "./integer8";
type PointerType = INumeric | Table | ICharacter | ABAPObject | Integer8 | undefined | Structure | Float;
export declare class DataReference {
    private pointer;
    private readonly type;
    constructor(type: PointerType);
    getType(): PointerType;
    assign(pointer: PointerType): void;
    unassign(): void;
    getPointer(): PointerType;
    dereference(): PointerType;
    clear(): void;
    get(): any;
    array(): any;
    getArrayLength(): any;
    set(value: any): void | Integer8 | Float | ABAPObject | this | Table | Structure;
    getOffset(input: {
        offset?: number | INumeric | Hex;
        length?: number | INumeric | Hex;
    }): String;
}
export {};
