import { DB } from "@abaplint/runtime";
export declare class SQLiteDatabaseClient implements DB.DatabaseClient {
    readonly name = "sqlite";
    private readonly trace;
    private sqlite;
    constructor(input?: {
        trace?: boolean;
    });
    connect(data?: ArrayLike<number> | Buffer | null): Promise<void>;
    disconnect(): Promise<void>;
    execute(sql: string | string[]): Promise<void>;
    export(): Uint8Array | undefined;
    beginTransaction(): Promise<void>;
    commit(): Promise<void>;
    rollback(): Promise<void>;
    delete(options: DB.DeleteDatabaseOptions): Promise<{
        subrc: number;
        dbcnt: number;
    }>;
    update(options: DB.UpdateDatabaseOptions): Promise<{
        subrc: number;
        dbcnt: number;
    }>;
    insert(options: DB.InsertDatabaseOptions): Promise<{
        subrc: number;
        dbcnt: number;
    }>;
    select(options: DB.SelectDatabaseOptions): Promise<{
        rows: DB.DatabaseRows;
    }>;
    private convert;
    openCursor(options: DB.SelectDatabaseOptions): Promise<DB.DatabaseCursorCallbacks>;
    private fetchNextCursor;
    private closeCursor;
}
